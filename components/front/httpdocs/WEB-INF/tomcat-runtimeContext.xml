<?xml version="1.0" encoding="utf-8"?><beans 	xmlns="http://www.springframework.org/schema/beans" 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 	xmlns:aop="http://www.springframework.org/schema/aop"	xmlns:context="http://www.springframework.org/schema/context" 	xsi:schemaLocation="		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd		"><description>        	Este descriptor incluye la configuraci√≥n hibernate y de transacciones para entorno "no ejb"</description>		<context:property-placeholder location="classpath:application.properties" /><!-- Datasource configurado en tomcat -->	<beans profile="!tests">	    <bean  id="frontDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">	        <property name="jndiName" value="${datasource.jndiName}" />	    </bean>    </beans>	<beans profile="tests">		<bean id="frontDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">	        <property name="driverClassName" value="${database.driver}"/>	        <property name="url" value="${database.uri}"/>	        <property name="username" value="${database.user}"/>	        <property name="password" value="${database.password}"/>	    </bean>	        </beans>        <beans>		<!-- Hibernate session factory -->	    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">	        <property name="dataSource" ref="frontDataSource" />	        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>	    </bean>	    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">	        <property name="sessionFactory" ref="sessionFactory" />	    </bean>	<!--	                Transaction interceptor to use for auto-proxy creation.	                Transaction attributes will be read in from JDK 1.5+ annotations.	        -->	    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">	        <property name="transactionManager" ref="transactionManager" />	        <property name="transactionAttributeSource">	            <bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />	        </property>	    </bean>	<!--	                AOP advisor that will provide declarative transaction management based on	                attributes. It's possible to add arbitrary custom Advisor implementations	                as well, and they will also be evaluated and applied automatically.	        -->	    <bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">	        <property name="transactionInterceptor" ref="transactionInterceptor" />	    </bean>    </beans>    </beans>