package es.caib.avaedi.common.model;

// Generated 12-sep-2016 10:10:37

import static javax.persistence.GenerationType.SEQUENCE;

import java.math.BigDecimal;
import java.util.LinkedHashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import es.caib.avaedi.at4forms.common.basedao.BaseModel;

/**
 * Edificio generated by hbm2java
 */
@Entity
@Table(name = "aed_edificio")
public class Edificio extends BaseModel implements java.io.Serializable {

	/** serialVersionUID */
	private static final long serialVersionUID = 1L;

	private int clave;
	private Via via;
	/**
	 * Número "oficial" en que se ubica el edificio
	 */
	private String numeroCatastro;
	/**
	 * Numeración extra del edificio, cuando coexiste más de una comunidad o una
	 * unidad de informe en el mismo número
	 */
	private String numeroExtra;
	/**
	 * Nom
	 */
	private String referenciaCatastral;
	/**
	 * Año de construcción
	 */
	private Integer antiguedad;
	/**
	 * Coordenada X (UTM EPSG:25831)
	 */
	private BigDecimal centroX;
	/**
	 * Coordenada Y (UTM EPSG:25831)
	 */
	private BigDecimal centroY;
	private Set<Informe> informes = new LinkedHashSet<Informe>(0);

	public Edificio() {
	}

	public Edificio(Via via, String referenciaCatastral) {
		this.via = via;
		this.referenciaCatastral = referenciaCatastral;
	}

	public Edificio(Via via, String numeroCatastro, String numeroExtra, String referenciaCatastral, Integer antiguedad, BigDecimal centroX, BigDecimal centroY, Set<Informe> informes) {
		this.via = via;
		this.numeroCatastro = numeroCatastro;
		this.numeroExtra = numeroExtra;
		this.referenciaCatastral = referenciaCatastral;
		this.antiguedad = antiguedad;
		this.centroX = centroX;
		this.centroY = centroY;
		this.informes = informes;
	}

	@SequenceGenerator(name = "generator", sequenceName = "AED_EDIFICIO_SEQ", allocationSize = 1)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "clave", unique = true, nullable = false)
	public int getClave() {
		return this.clave;
	}

	public void setClave(int clave) {
		this.clave = clave;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "clave_via", nullable = false)
	public Via getVia() {
		return this.via;
	}

	public void setVia(Via via) {
		this.via = via;
	}

	/**
	 * * Número "oficial" en que se ubica el edificio
	 */

	@Column(name = "numero_catastro", length = 64)
	public String getNumeroCatastro() {
		return this.numeroCatastro;
	}

	public void setNumeroCatastro(String numeroCatastro) {
		this.numeroCatastro = numeroCatastro;
	}

	/**
	 * * Numeración extra del edificio, cuando coexiste más de una comunidad o
	 * una unidad de informe en el mismo número
	 */

	@Column(name = "numero_extra", length = 64)
	public String getNumeroExtra() {
		return this.numeroExtra;
	}

	public void setNumeroExtra(String numeroExtra) {
		this.numeroExtra = numeroExtra;
	}

	/**
	 * * Nom
	 */

	@Column(name = "referencia_catastral", nullable = false, length = 14)
	public String getReferenciaCatastral() {
		return this.referenciaCatastral;
	}

	public void setReferenciaCatastral(String referenciaCatastral) {
		this.referenciaCatastral = referenciaCatastral;
	}

	/**
	 * * Año de construcción
	 */

	@Column(name = "antiguedad")
	public Integer getAntiguedad() {
		return this.antiguedad;
	}

	public void setAntiguedad(Integer antiguedad) {
		this.antiguedad = antiguedad;
	}

	/**
	 * * Coordenada X (UTM EPSG:25831)
	 */

	@Column(name = "centro_x", precision = 12, scale = 4)
	public BigDecimal getCentroX() {
		return this.centroX;
	}

	public void setCentroX(BigDecimal centroX) {
		this.centroX = centroX;
	}

	/**
	 * * Coordenada Y (UTM EPSG:25831)
	 */

	@Column(name = "centro_y", precision = 12, scale = 4)
	public BigDecimal getCentroY() {
		return this.centroY;
	}

	public void setCentroY(BigDecimal centroY) {
		this.centroY = centroY;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "edificio")
	@OrderBy("fechaInforme DESC")
	public Set<Informe> getInformes() {
		return this.informes;
	}

	public void setInformes(Set<Informe> informes) {
		this.informes = informes;
	}

	/**
	 * toString
	 * 
	 * @return String
	 */
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("clave").append("='").append(getClave()).append("' ");
		buffer.append("]");

		return buffer.toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof Edificio))
			return false;
		Edificio castOther = (Edificio) other;

		return (this.getClave() == castOther.getClave());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getClave();

		return result;
	}

}
