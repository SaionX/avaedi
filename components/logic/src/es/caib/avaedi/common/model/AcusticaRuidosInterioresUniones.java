package es.caib.avaedi.common.model;

// Generated 21-sep-2016 17:21:16

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import es.caib.avaedi.at4forms.common.basedao.BaseModel;

/**
 * AcusticaRuidosInterioresUniones generated by hbm2java
 */
@Entity
@Table(name = "aed_acu_ruiintuniones")
public class AcusticaRuidosInterioresUniones extends BaseModel implements java.io.Serializable {

	/** serialVersionUID */
	private static final long serialVersionUID = 1L;

	private int claveInforme;
	private Inspeccion inspeccion;
	/**
	 * (elemento_separacion_vertical_forjado_conexion_rigida)
	 */
	private Integer elementoSeparacionVerticalForjadoConexionRigida;
	/**
	 * (elemento_separacion_vertical_forjado_mortero)
	 */
	private Integer elementoSeparacionVerticalForjadoMortero;
	/**
	 * (elemento_separacion_vertical_forjado_suelo_flotante)
	 */
	private Integer elementoSeparacionVerticalForjadoSueloFlotante;
	/**
	 * (elemento_separacion_vertical_forjado_techo_suspendido)
	 */
	private Integer elementoSeparacionVerticalForjadoTechoSuspendido;
	private Integer hojaInteriorFachadaContinua;
	private Integer materialAislanteElastico;
	private String observaciones;

	public AcusticaRuidosInterioresUniones() {
	}

	public AcusticaRuidosInterioresUniones(Inspeccion inspeccion) {
		this.inspeccion = inspeccion;
	}

	public AcusticaRuidosInterioresUniones(Inspeccion inspeccion, Integer elementoSeparacionVerticalForjadoConexionRigida, Integer elementoSeparacionVerticalForjadoMortero, Integer elementoSeparacionVerticalForjadoSueloFlotante, Integer elementoSeparacionVerticalForjadoTechoSuspendido, Integer hojaInteriorFachadaContinua, Integer materialAislanteElastico, String observaciones) {
		this.inspeccion = inspeccion;
		this.elementoSeparacionVerticalForjadoConexionRigida = elementoSeparacionVerticalForjadoConexionRigida;
		this.elementoSeparacionVerticalForjadoMortero = elementoSeparacionVerticalForjadoMortero;
		this.elementoSeparacionVerticalForjadoSueloFlotante = elementoSeparacionVerticalForjadoSueloFlotante;
		this.elementoSeparacionVerticalForjadoTechoSuspendido = elementoSeparacionVerticalForjadoTechoSuspendido;
		this.hojaInteriorFachadaContinua = hojaInteriorFachadaContinua;
		this.materialAislanteElastico = materialAislanteElastico;
		this.observaciones = observaciones;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "inspeccion"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "clave_informe", unique = true, nullable = false)
	public int getClaveInforme() {
		return this.claveInforme;
	}

	public void setClaveInforme(int claveInforme) {
		this.claveInforme = claveInforme;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "clave_informe", unique = true, nullable = false)
	public Inspeccion getInspeccion() {
		return this.inspeccion;
	}

	public void setInspeccion(Inspeccion inspeccion) {
		this.inspeccion = inspeccion;
	}

	/**
	 * * (elemento_separacion_vertical_forjado_conexion_rigida)
	 */

	@Column(name = "elem_sep_vert_forj_con_rig")
	public Integer getElementoSeparacionVerticalForjadoConexionRigida() {
		return this.elementoSeparacionVerticalForjadoConexionRigida;
	}

	public void setElementoSeparacionVerticalForjadoConexionRigida(Integer elementoSeparacionVerticalForjadoConexionRigida) {
		this.elementoSeparacionVerticalForjadoConexionRigida = elementoSeparacionVerticalForjadoConexionRigida;
	}

	/**
	 * * (elemento_separacion_vertical_forjado_mortero)
	 */

	@Column(name = "elem_sep_vert_forj_mortero")
	public Integer getElementoSeparacionVerticalForjadoMortero() {
		return this.elementoSeparacionVerticalForjadoMortero;
	}

	public void setElementoSeparacionVerticalForjadoMortero(Integer elementoSeparacionVerticalForjadoMortero) {
		this.elementoSeparacionVerticalForjadoMortero = elementoSeparacionVerticalForjadoMortero;
	}

	/**
	 * * (elemento_separacion_vertical_forjado_suelo_flotante)
	 */

	@Column(name = "elem_sep_vert_forj_suelo_flot")
	public Integer getElementoSeparacionVerticalForjadoSueloFlotante() {
		return this.elementoSeparacionVerticalForjadoSueloFlotante;
	}

	public void setElementoSeparacionVerticalForjadoSueloFlotante(Integer elementoSeparacionVerticalForjadoSueloFlotante) {
		this.elementoSeparacionVerticalForjadoSueloFlotante = elementoSeparacionVerticalForjadoSueloFlotante;
	}

	/**
	 * * (elemento_separacion_vertical_forjado_techo_suspendido)
	 */

	@Column(name = "elem_sep_vert_forj_techo_susp")
	public Integer getElementoSeparacionVerticalForjadoTechoSuspendido() {
		return this.elementoSeparacionVerticalForjadoTechoSuspendido;
	}

	public void setElementoSeparacionVerticalForjadoTechoSuspendido(Integer elementoSeparacionVerticalForjadoTechoSuspendido) {
		this.elementoSeparacionVerticalForjadoTechoSuspendido = elementoSeparacionVerticalForjadoTechoSuspendido;
	}

	@Column(name = "hoja_interior_fachada_continua")
	public Integer getHojaInteriorFachadaContinua() {
		return this.hojaInteriorFachadaContinua;
	}

	public void setHojaInteriorFachadaContinua(Integer hojaInteriorFachadaContinua) {
		this.hojaInteriorFachadaContinua = hojaInteriorFachadaContinua;
	}

	@Column(name = "material_aislante_elastico")
	public Integer getMaterialAislanteElastico() {
		return this.materialAislanteElastico;
	}

	public void setMaterialAislanteElastico(Integer materialAislanteElastico) {
		this.materialAislanteElastico = materialAislanteElastico;
	}

	@Column(name = "observaciones")
	public String getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}

	/**
	 * toString
	 * 
	 * @return String
	 */
	public String toString() {
		StringBuffer buffer = new StringBuffer();

		buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
		buffer.append("claveInforme").append("='").append(getClaveInforme()).append("' ");
		buffer.append("inspeccion").append("='").append(getInspeccion()).append("' ");
		buffer.append("]");

		return buffer.toString();
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof AcusticaRuidosInterioresUniones))
			return false;
		AcusticaRuidosInterioresUniones castOther = (AcusticaRuidosInterioresUniones) other;

		return (this.getClaveInforme() == castOther.getClaveInforme()) && ((this.getInspeccion() == castOther.getInspeccion()) || (this.getInspeccion() != null && castOther.getInspeccion() != null && this.getInspeccion().equals(castOther.getInspeccion())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getClaveInforme();
		result = 37 * result + (getInspeccion() == null ? 0 : this.getInspeccion().hashCode());

		return result;
	}

}
